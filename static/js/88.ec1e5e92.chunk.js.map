{"version":3,"file":"static/js/88.ec1e5e92.chunk.js","mappings":"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","sources":["components/Movies/MoviesDetails.styled.js","components/Movies/MoviesDetails.js","pages/MoviesDetailsPage.js","services/fakeApi.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\n    padding: 16px 0;\n`;\n\nexport const Container = styled.div`\n    //max-width: 1145px;\n    margin: 0 auto;\n    padding: 0 16px;\n`;\n\nexport const ContainerForm = styled.div`\n    //max-width: 1145px;\n    margin-left: 30px;\n    // margin: 0 auto;\n    padding: 20px 0px;\n`;\n\n\nexport const BoxContent = styled.div`\n    display:flex;\n    margin-top: 20px;\n`;\n\nexport const Image = styled.img`\n    max-width: 350px;\n`;\n\nexport const Content = styled.div`\n    margin: 0px 0px 0px 20px;\n`;\nexport const Title = styled.h2`\n\n`;\n\nexport const Text = styled.p`\n    margin: 3px;\n    max-width: 600px;\n`;\n\nexport const SubTitle = styled.h3`\n\n`;\n\nexport const BoxGaner = styled.div`\n    display: flex;\n`;\n\nexport const CastReviews = styled.ul`\n    display: flex;\n    // justify-content: center;\n`;\nexport const Links = styled(NavLink)`\n    padding: 6px;\n    text-decoration: none;\n    color: #000;\n    &.active {\n    color: orangered;\n    border-bottom: 2px solid orangered;\n  }\n`;\n\nexport const ButtonBack = styled(NavLink)`\n\ttext-decoration: none;\n\tbackground: rgba(255,255,255,.1);\n`;\n\nexport const Block = styled.div`\n  display: flex;\n  padding: 20px 0px;\n`;\nexport const Div = styled.div`\n  margin: 0px 5px;\n`;\n\nexport const Icon = styled.span`\n    display: inline-flex;\n    justify-content: center;\n    align-items: center\n`;","import { Outlet, useParams } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\"\nimport { getMoviesAPI } from \"services/fakeApi\";\nimport { useEffect, useState } from \"react\";\nimport { BsFillArrowLeftSquareFill, BsFillBookmarkFill } from \"react-icons/bs\";\n\nimport {\n    Wrapper, Container,\n    BoxContent, Image,\n    Content, Title,\n    SubTitle, Text,\n    BoxGaner, CastReviews,\n    Links, ButtonBack,\n    Block, Icon, Div\n} from \"./MoviesDetails.styled\";\n\nconst styleForIcons = {\n    width: '30px',\n    height: '30px',\n    color: 'orangered',\n};\n\nexport const MovieDetails = () => {\n    const [movies, setMovies] = useState([]);\n    const { movieId } = useParams();\n\n    const location = useLocation();\n    const backPage = location.state?.from ?? '/';\n\n    useEffect(() => {\n        getMoviesAPI(movieId)\n            .then(setMovies)\n    }, [movieId])\n\n    const { poster_path, original_title, vote_average, overview, genres } = movies;\n\n    if (movies.length === 0) {\n        return;\n    }\n    return (\n        <Wrapper>\n            <Container>\n                <ButtonBack to={backPage}>\n                    <BsFillArrowLeftSquareFill style={styleForIcons} />\n                </ButtonBack>\n                <BoxContent>\n                    <Image src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt=\"\" />\n                    <Content>\n                        <Title>{original_title}</Title>\n                        <Text>User Score: {Math.round(vote_average * 10)}%</Text>\n                        <SubTitle>Overview</SubTitle>\n                        <Text>{overview}</Text>\n                        <SubTitle>Genres</SubTitle>\n                        <BoxGaner>\n                            {genres && genres.map(({ id, name }) => (\n                                <Text key={id}>{name}</Text>\n                            ))}\n                        </BoxGaner>\n                    </Content>\n                </BoxContent>\n            </Container>\n            <hr />\n            <Container>\n                <CastReviews>\n                    <Block>\n                        <Icon><BsFillBookmarkFill /></Icon>\n                        <Div>\n                            <Links to=\"cast\">Cast</Links>\n                            <Links to=\"reviews\">Reviews</Links>\n                        </Div>\n                    </Block>\n                </CastReviews>\n            </Container>\n            <Outlet />\n            <hr />\n\n        </Wrapper>\n    )\n}\n\n","import { MovieDetails } from \"../components/Movies/MoviesDetails\"\n\nconst MoviesDetailsPage = () => {\n    return (\n        <>\n            <MovieDetails />\n        </>\n    )\n}\n\nexport default MoviesDetailsPage;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2755fba3e929303148b2d926b9a7bf84';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const getTrandingAPI = async () => {\n    try {\n        const response = await axios.get(`/trending/movie/day`);\n        return response.data;\n    } catch (error) {\n        console.log(error.message);\n    }\n};\n\nexport const getMoviesAPI = async (id) => {\n    try {\n        const response = await axios.get(`/movie/${id}`);\n        return response.data;\n    } catch (error) {\n        console.log(error.message);\n    }\n};\n\nexport const getSearchMoviesAPI = async (query) => {\n    const { data } = await axios.get(`/search/movie?query=${query}`);\n\n    return data.results;\n};\n\nexport const getCastAPI = async (movieId) => {\n    const { data } = await axios.get(`/movie/${movieId}/credits`);\n\n    return data;\n};\n\nexport const getReveiwsAPI = async (movieId) => {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`);\n\n    return data;\n};\n\n\n"],"names":["Wrapper","styled","Container","ContainerForm","BoxContent","Image","Content","Title","Text","SubTitle","BoxGaner","CastReviews","Links","NavLink","ButtonBack","Block","Div","Icon","styleForIcons","width","height","color","MovieDetails","useState","movies","setMovies","movieId","useParams","backPage","useLocation","state","from","useEffect","getMoviesAPI","then","poster_path","original_title","vote_average","overview","genres","length","to","style","src","alt","Math","round","map","id","name","axios","api_key","getTrandingAPI","response","data","console","log","message","getSearchMoviesAPI","query","results","getCastAPI","getReveiwsAPI"],"sourceRoot":""}