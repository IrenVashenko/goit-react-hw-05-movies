{"version":3,"file":"static/js/541.44222c53.chunk.js","mappings":"4MAsDA,UAjDa,WACT,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA2BH,EAAAA,EAAAA,WAAS,GAApC,eAAOK,EAAP,KAAeC,EAAf,KAYA,OAXAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAWL,GACNM,MAAK,SAAAC,GACGA,EAAKT,MAGVC,EAAQQ,EAAKT,SAEhBU,OAAM,kBAAML,GAAS,QAC3B,CAACH,KAGA,iCACI,mBACA,SAAC,KAAD,UACKF,IACG,UAAC,KAAD,WACKI,IAAU,uCACVJ,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,KAAMC,EAA1C,EAA0CA,UAA1C,OAEW,OAAjBH,GACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAOI,IAAG,yCAAoCJ,GAAgBK,IAAKJ,KACnE,UAAC,KAAD,YACI,SAAC,KAAD,UAAOC,KACP,uBAAIC,SAJAJ,IAQZ,UAAC,KAAD,YACI,SAAC,KAAD,CAAOK,IAAI,mFAAmFC,IAAI,QAAQC,MAAM,QAAQC,OAAO,WAC/H,UAAC,KAAD,YACI,SAAC,KAAD,UAAOL,KACP,uBAAIC,SAJAJ,gB,iNCpC/BS,EAAQC,EAAAA,GAAAA,GAAH,ybAkBLC,EAAQD,EAAAA,GAAAA,GAAH,uTAQLE,EAAQF,EAAAA,GAAAA,IAAH,0JASLG,EAAUH,EAAAA,GAAAA,IAAH,4CAIPI,EAAOJ,EAAAA,GAAAA,EAAH,yEAKJK,EAAYL,EAAAA,GAAAA,IAAH,+F,0MC5CtBM,IAAAA,SAAAA,QAAyB,+BAEzBA,IAAAA,SAAAA,OAAwB,CAAEC,QADV,oCAGT,IAAMC,EAAc,mCAAG,6GAECF,IAAAA,IAAA,uBAFD,cAEhBG,EAFgB,yBAGfA,EAAStB,MAHM,gCAKtBuB,QAAQC,IAAI,KAAMC,SALI,yDAAH,qDASdC,EAAY,mCAAG,WAAOvB,GAAP,gGAEGgB,IAAAA,IAAA,iBAAoBhB,IAFvB,cAEdmB,EAFc,yBAGbA,EAAStB,MAHI,gCAKpBuB,QAAQC,IAAI,KAAMC,SALE,yDAAH,sDASZE,EAAkB,mCAAG,WAAOC,GAAP,yFACPT,IAAAA,IAAA,8BAAiCS,IAD1B,uBACtB5B,EADsB,EACtBA,KADsB,kBAGvBA,EAAK6B,SAHkB,2CAAH,sDAMlB/B,EAAU,mCAAG,WAAOL,GAAP,yFACC0B,IAAAA,IAAA,iBAAoB1B,EAApB,aADD,uBACdO,EADc,EACdA,KADc,kBAGfA,GAHe,2CAAH,sDAMV8B,EAAa,mCAAG,WAAOrC,GAAP,yFACF0B,IAAAA,IAAA,iBAAoB1B,EAApB,aADE,uBACjBO,EADiB,EACjBA,KADiB,kBAGlBA,GAHkB,2CAAH","sources":["components/Cast/Cast.js","components/Cast/Cast.styled.js","services/fakeApi.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastAPI } from '../../services/fakeApi';\nimport { Links, Items, Content, Name, Image, Container } from './Cast.styled';\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const { movieId } = useParams();\n    const [errors, setError] = useState(false);\n    useEffect(() => {\n        getCastAPI(movieId)\n            .then(data => {\n                if (!data.cast) {\n                    return;\n                }\n                setCast(data.cast)\n            })\n            .catch(() => setError(true));\n    }, [movieId]);\n\n    return (\n        <>\n            <hr />\n            <Container>\n                {cast && (\n                    <Links>\n                        {errors && <div>Not Found</div>}\n                        {cast.map(({ id, profile_path, original_name, name, character }) =>\n                        (\n                            profile_path !== null ? (\n                                <Items key={id}>\n                                    <Image src={`https://image.tmdb.org/t/p/w200${profile_path}`} alt={original_name} />\n                                    <Content>\n                                        <Name>{name}</Name>\n                                        <p>{character}</p>\n                                    </Content>\n                                </Items>\n                            ) :\n                                <Items key={id}>\n                                    <Image src=\"https://www.truesupreme.com/wp-content/uploads/2017/04/default-image-620x600.jpg\" alt=\"Photo\" width=\"200px\" hright=\"300px\" />\n                                    <Content>\n                                        <Name>{name}</Name>\n                                        <p>{character}</p>\n                                    </Content>\n                                </Items>\n                        )\n                        )}\n                    </Links>\n                )}\n            </Container>\n        </>\n    )\n};\n\nexport default Cast;","import styled from \"styled-components\";\n\nexport const Links = styled.ul`\n    // display: flex;\n    // flex-wrap: wrap;\n    // //justify-content: center;\n    // padding: 0px 30px;\n    // margin: -8px;\n    display: grid;\n    //max-width: calc(100vw -48px);\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 20px 16px;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`\n\nexport const Items = styled.li`\n    // box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n    // list-style: none;\n    // margin: 8px;\n    // border-radius: 4px;\n    border-radius: 2px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const Image = styled.img`\n    // width: 100%;\n    // display: block;\n    // height: 300px;\n    width: 100%;\n    height: 300px;\n    object-fit: cover;\n`;\n\nexport const Content = styled.div`\n    padding: 15px;\n`;\n\nexport const Name = styled.p`\n    font-weight: 500;\n    margin-bottom: 10px;\n`;\n\nexport const Container = styled.div`\n    // max-width: 1145px;\n    margin: 0 auto;\n    padding: 0 16px;\n`;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2755fba3e929303148b2d926b9a7bf84';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const getTrandingAPI = async () => {\n    try {\n        const response = await axios.get(`/trending/movie/day`);\n        return response.data;\n    } catch (error) {\n        console.log(error.message);\n    }\n};\n\nexport const getMoviesAPI = async (id) => {\n    try {\n        const response = await axios.get(`/movie/${id}`);\n        return response.data;\n    } catch (error) {\n        console.log(error.message);\n    }\n};\n\nexport const getSearchMoviesAPI = async (query) => {\n    const { data } = await axios.get(`/search/movie?query=${query}`);\n\n    return data.results;\n};\n\nexport const getCastAPI = async (movieId) => {\n    const { data } = await axios.get(`/movie/${movieId}/credits`);\n\n    return data;\n};\n\nexport const getReveiwsAPI = async (movieId) => {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`);\n\n    return data;\n};\n\n\n"],"names":["useState","cast","setCast","movieId","useParams","errors","setError","useEffect","getCastAPI","then","data","catch","map","id","profile_path","original_name","name","character","src","alt","width","hright","Links","styled","Items","Image","Content","Name","Container","axios","api_key","getTrandingAPI","response","console","log","message","getMoviesAPI","getSearchMoviesAPI","query","results","getReveiwsAPI"],"sourceRoot":""}